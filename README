Addendum by Henrik Kramselund @kramse

2022 - post-troopers22

A friend has gone through my repository and additional patches found on the internet.

Your recommended path to an IPv6 AND VXLAN enabled hping3 would thus be.

0) git clone the original
https://github.com/antirez/hping.git

1) take the patches directory from THIS repository,
either copy the dir or the file kramse-hping3-2022.tar.gz

Apply them:

user@Projects:hping$ pwd
18:40 <kramsev6> /home/user/projects/github/hping

```
user@Projects:hping$ patch < patches/0001
```
and continue with the rest

Note: some of them seem to have small problems identifying the file to patch,
just enter it manually like

```
|diff --git a/docs/hping3.8 b/docs/hping3.8
|index 3da78ed..ba24276 100644
|--- a/docs/hping3.8
|+++ b/docs/hping3.8
--------------------------
File to patch: **docs/hping3.8**
```

If you are a package maintainer, feel free to integrate these.

2) Run configure and make
./configure --no-tcl
make

3) Run hping3 with IPv6 packets:

```
sudo ./hping3 --inet6 -I eth0 -D -c 1 -p 80 -a 2a03:d380::1234 www.kramse.org
```

4)
```
sudo ./hping3 -S -p 80 --vxlan-source-addr 172.29.0.134 --vxlan-dest-addr 172.29.0.129
--vxlan-source-port 4789 --vxlan-dest-port 4789 --vxlan-vni 128512 172.29.0.128
--spoof 172.29.0.135 --vxlan-source-mac 55:55:55:55:55:55 --vxlan-dest-mac dd:00:55:ff:ff:ff
```
(one line)

--- ORIGINAL below ---

hping3 README file
antirez@invece.org

DESCRIPTION

	hping3 is a network tool able to send custom TCP/IP
	packets and to display target replies like ping do with
	ICMP replies. hping3 can handle fragmentation, and
	almost arbitrary packet size and content, using the
	command line interface.

	Since version 3, hping implements scripting capabilties,
	read the API.txt file under the /docs directory to know
	more about it.

	As a command line utility, hping is useful to test at
	many kind of networking devices like firewalls, routers,
	and so. It can be used as a traceroute alike program over all
	the supported protocols, firewalk usage, OS fingerprinting,
	port-scanner (see the --scan option introduced with hping3),
	TCP/IP stack auditing.

	It's also really a good didactic tool to learn TCP/IP.

	Using Tcl/Tk scripting much more can be done, because
	while the hping3 packet generation code is actually the
	hping2 put there mainly for compatibility with the command
	line interface, all the real news are about scripting.

	See the libs directory for example scripts. To run
	the example scripts type:

		hping3 exec ScriptName.htcl <arguments, if required>

	hping3 is developed and manteined by antirez@invece.org
	with the help of other hackers, and comes under GPL version
	2 of license. Development is open so you can send me
	patches/suggestions/affronts without inhibitions.

	Please check the AUTHORS file for a list of people that
	contribued with code, ideas, bug reports.

	Also vim developer, ee.lbl.gov for tcpdump and GNU in general.

DOCUMENTATION

	For the hping3 API check docs/API.txt

	You can find documentation about hping3 specific functions
	at http://wiki.hping.org

	Make sure to check the page at http://wiki.hping.org/34

DOWNLOAD

	The hping3 primary download site is the following:

		http://www.hping.org

	----------------------------------------------------------------
	How to get the hping3 source code from the anonymous CVS server
	----------------------------------------------------------------

	$ cvs -d :pserver:anonymous@cvs.hping2.sourceforge.net:/cvsroot/hping2 login

	CVS will ask for the password, just press enter, no password is required

	than type the following to download the full source code.

	$ cvs -z8 -d :pserver:anonymous@cvs.hping2.sourceforge.net:/cvsroot/hping2 checkout hping3s

	-----------------------------------
	How to update your source code tree
	-----------------------------------

	change the current directory to /somewhere/hping2, than just type:

	$ cvs update

REQUIREMENTS

	A supported unix-like OS, gcc, root access.

	Libpcap.

	Tcl/Tk is optional but strongly suggested.

INSTALLATION

	see INSTALL file.

have fun,
antirez
